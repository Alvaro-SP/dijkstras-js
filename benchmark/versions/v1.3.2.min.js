var Dijkstras_1_3_2=function(){var k=function(){this.graph=[];this.queue;this.distance=[];this.previous=[]};k.prototype.setGraph=function(c){if("object"!==typeof c)throw"graph isn't an object ("+typeof c+")";if(1>c.length)throw"graph is empty";for(var a in c){var b=c[a];if("object"!==typeof b||2!==b.length)throw"node must be an array and contain 2 values (name, vertices). Failed at index: "+a;var e=b[0],b=b[1];this.graph[e]=[];for(var d in b){var g=b[d];if("object"!==typeof g||2!==g.length)throw"vertex must be an array and contain 2 values (name, vertices). Failed at index: "+
a+"["+d+"]";this.graph[e][g[0]]=g[1]}}};k.prototype.getPath=function(c,a){if("undefined"===typeof this.graph[c])throw"source "+c+" doesn't exist";if("undefined"===typeof this.graph[a])throw"target "+a+" doesn't exist";if(c===a)return[];this.queue=new l;this.queue.add(c,0);for(var b=this.previous[c]=null;b=this.queue.shift();){if(b===a){for(var e=[];null!=this.previous[b];)e.unshift(b),b=this.previous[b];return e}if(Infinity==this.queue.getDistance(b))break;for(e in this.graph[b]){var d=this.queue.getDistance(b),
g=this.queue.getDistance(e),d=d+this.graph[b][e];d<g&&(this.queue.update(e,d),this.previous[e]=b)}}return[]};var l=function(){var c=function(){this.min=null;this.roots=[];this.nodes=[]};c.prototype.shift=function(){var a=this.min;if(null==a||1>this.roots.length)return this.min=null,a;this.remove(a);100<this.roots.length&&this.consolidate();for(var b=Infinity,e=this.roots.length,d=0;d<e;d++){var c=this.roots[d],f=this.getDistance(c);f<b&&(b=f,this.min=c)}return a};c.prototype.consolidate=function(){for(var a=
[[],[],[],[],[],[],[]],b=a.length-1,e=this.roots.length,d=0;d<e;d++){var c=this.roots[d],f=this.nodes[c].depth;f<b&&a[f].push(c)}for(f=0;f<=b;f++)for(;1<a[f].length;){var e=a[f].shift(),d=a[f].shift(),c=f+1,h=-1;this.nodes[e].distance<this.nodes[d].distance?(this.nodes[e].depth=c,this.nodes[e].children.push(d),this.nodes[d].parent=e,c<=b&&a[c].push(e),h=this.roots.indexOf(d)):(this.nodes[d].depth=c,this.nodes[d].children.push(e),this.nodes[e].parent=d,c<=b&&a[c].push(d),h=this.roots.indexOf(e));-1<
h&&this.roots.splice(h,1)}};c.prototype.add=function(a,b){this.nodes[a]={node:a,distance:b,depth:0,parent:null,children:[]};if(!this.min||b<this.nodes[this.min].distance)this.min=a;this.roots.push(a)};c.prototype.update=function(a,b){this.remove(a);this.add(a,b)};c.prototype.remove=function(a){if(this.nodes[a]){var b=this.nodes[a].children.length;if(0<b)for(var c=0;c<b;c++){var d=this.nodes[a].children[c];this.nodes[d].parent=this.nodes[a].parent;null==this.nodes[d].parent&&this.roots.push(d)}b=this.nodes[a].parent;
if(null==b)a=this.roots.indexOf(a),-1<a&&this.roots.splice(a,1);else for(;b;)this.nodes[b].depth--,b=this.nodes[b].parent}};c.prototype.getDistance=function(a){return this.nodes[a]?this.nodes[a].distance:Infinity};return c}();return k}();